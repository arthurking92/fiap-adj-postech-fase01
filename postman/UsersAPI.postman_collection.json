{
  "info": {
    "name": "Users API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    { "key": "baseUrl", "value": "http://localhost:8080" },
    { "key": "userId", "value": "" }
  ],
  "item": [
    {
      "name": "Health",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status 200', function () { pm.response.to.have.status(200); });",
              "pm.test('Health UP', function () { var json = pm.response.json(); pm.expect(json.status).to.eql('UP'); });"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/actuator/health",
          "host": ["{{baseUrl}}"],
          "path": ["actuator", "health"]
        }
      }
    },
    {
      "name": "Auth - Login",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status 200', function () { pm.response.to.have.status(200); });",
              "pm.test('Tem campo valid', function () { var json = pm.response.json(); pm.expect(json).to.have.property('valid'); });"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [ { "key": "Content-Type", "value": "application/json" } ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"login\": \"owner1\",\n  \"password\": \"secret123\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/auth/login",
          "host": ["{{baseUrl}}"],
          "path": ["api", "auth", "login"]
        }
      }
    },
    {
      "name": "Users - Create",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status 201', function () { pm.response.to.have.status(201); });",
              "var json = pm.response.json();",
              "pm.test('Tem id', function () { pm.expect(json).to.have.property('id'); });",
              "pm.environment.set('userId', json.id);"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [ { "key": "Content-Type", "value": "application/json" } ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"Owner One\",\n  \"email\": \"owner1@example.com\",\n  \"login\": \"owner1\",\n  \"password\": \"secret123\",\n  \"address\": \"Rua A, 123\",\n  \"role\": \"RESTAURANT_OWNER\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/users",
          "host": ["{{baseUrl}}"],
          "path": ["api", "users"]
        }
      }
    },
    {
      "name": "Users - List",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status 200', function () { pm.response.to.have.status(200); });",
              "pm.test('Ã‰ array', function () { pm.expect(pm.response.json()).to.be.an('array'); });"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/users",
          "host": ["{{baseUrl}}"],
          "path": ["api", "users"]
        }
      }
    },
    {
      "name": "Users - Get by Id",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status 200', function () { pm.response.to.have.status(200); });",
              "pm.test('Id confere', function () { var json = pm.response.json(); pm.expect(json.id).to.eql(pm.environment.get('userId')); });"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/users/{{userId}}",
          "host": ["{{baseUrl}}"],
          "path": ["api", "users", "{{userId}}"]
        }
      }
    },
    {
      "name": "Users - Update",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status 200', function () { pm.response.to.have.status(200); });",
              "pm.test('Nome atualizado', function () { var json = pm.response.json(); pm.expect(json.name).to.eql('Owner One Updated'); });"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [ { "key": "Content-Type", "value": "application/json" } ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"Owner One Updated\",\n  \"email\": \"owner1@example.com\",\n  \"address\": \"Rua A, 456\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/users/{{userId}}",
          "host": ["{{baseUrl}}"],
          "path": ["api", "users", "{{userId}}"]
        }
      }
    },
    {
      "name": "Users - Change Password",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status 204', function () { pm.response.to.have.status(204); });"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [ { "key": "Content-Type", "value": "application/json" } ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"currentPassword\": \"secret123\",\n  \"newPassword\": \"secret456\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/users/{{userId}}/password",
          "host": ["{{baseUrl}}"],
          "path": ["api", "users", "{{userId}}", "password"]
        }
      }
    },
    {
      "name": "Users - Delete",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status 204', function () { pm.response.to.have.status(204); });",
              "pm.environment.unset('userId');"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/users/{{userId}}",
          "host": ["{{baseUrl}}"],
          "path": ["api", "users", "{{userId}}"]
        }
      }
    }
  ]
}


